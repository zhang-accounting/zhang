name: Develop Check

on:
  push:
    branches:
      - main
      - develop
  pull_request:
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  frontend-style-check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: pnpm/action-setup@v3
        with:
          version: 8
      - uses: actions/setup-node@v4
        with:
          node-version: 'lts/*'
          cache: 'pnpm'
          cache-dependency-path: frontend/pnpm-lock.yaml
      - name: frontend install
        run: pnpm install
        working-directory: ./frontend
      - name: frontend style check
        run: pnpm run prettier:check
        working-directory: ./frontend
  frontend-build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: pnpm/action-setup@v3
        with:
          version: 8
      - uses: actions/setup-node@v4
        with:
          node-version: 'lts/*'
          cache: 'pnpm'
          cache-dependency-path: frontend/pnpm-lock.yaml

      - name: frontend install
        run: pnpm install
        working-directory: ./frontend
      - name: frontend build
        run: pnpm build
        working-directory: ./frontend
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-latest, windows-latest, macOS-latest ]
        rust: [ stable ]
        features: [ default, plugin_runtime ]
    steps:
      - uses: actions/checkout@v4
      - name: Install ${{ matrix.rust }}
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: ${{ matrix.rust }}
      - name: fake frontend build
        run: mkdir -p dist
        working-directory: ./frontend
      - uses: actions/setup-python@v5
        with:
          python-version: '3.10'
      - name: Run test
        run: cargo test --features ${{matrix.features}}
  wasm-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions-rust-lang/setup-rust-toolchain@v1

      - uses: jetli/wasm-pack-action@v0.4.0
        with:
          # Optional version of wasm-pack to install(eg. 'v0.9.1', 'latest')
          version: 'v0.12.1'

      - name: build wasm
        run: wasm-pack build
        working-directory: ./bindings/wasm

      - name: pack wasm
        run: wasm-pack pack
        working-directory: ./bindings/wasm

  docs-build-deploy:
    runs-on: ubuntu-latest
    # Only deploy on push to main or develop, not on PRs
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop')
    steps:
      - uses: actions/checkout@v4
      
      - uses: pnpm/action-setup@v3
        with:
          version: 8
      
      - uses: actions/setup-node@v4
        with:
          node-version: 'lts/*'
          cache: 'pnpm'
          cache-dependency-path: docs/pnpm-lock.yaml
      
      - name: Install dependencies
        run: pnpm install
        working-directory: ./docs
      
      - name: Build documentation
        run: pnpm build
        working-directory: ./docs
      
      - name: Deploy to Cloudflare Workers
        uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ secrets.CF_API_TOKEN }}
          accountId: ${{ secrets.CF_ACCOUNT_ID }}
          workingDirectory: './docs'
          command: deploy

  coverage:
    if: false
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/checkout@v4
      - uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: stable
      - name: fake frontend build
        run: mkdir -p dist
        working-directory: ./frontend
      - name: Run cargo-tarpaulin
        uses: actions-rs/tarpaulin@v0.1
        with:
          version: '0.22.0'
          args: '--all-features --workspace --ignore-tests --out Lcov'
      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v4
      - name: Archive code coverage results
        uses: actions/upload-artifact@v4
        with:
          name: code-coverage-report
          path: cobertura.xml
  formatter:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: nightly
          components: rustfmt
      - name: fake frontend build
        run: mkdir -p dist
        working-directory: ./frontend
      - name: Format
        run: cargo fmt --all -- --check

  clippy-check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: stable
          components: clippy
      - name: fake frontend build
        run: mkdir -p dist
        working-directory: ./frontend
      - name: Clippy
        run: cargo clippy --all-features --all-targets -- -D warnings -D clippy::dbg_macro -A clippy::empty_docs

  typo-checker:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: typos-action
        uses: crate-ci/typos@v1.23.6